services:
  # ----------------------------------------------------
  # üêò POSTGRES - Base de datos compartida
  # ----------------------------------------------------
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: secret
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U myuser -d mydatabase']
      interval: 10s
      timeout: 5s
      retries: 5

  # ----------------------------------------------------
  # üóùÔ∏è KEYCLOAK - Servidor de autenticaci√≥n
  # ----------------------------------------------------
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command: start-dev
    ports:
      - '8180:8080' # Acceso externo
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/mydatabase
      KC_DB_USERNAME: myuser
      KC_DB_PASSWORD: secret
      KC_HTTP_ENABLED: true
    # KC_HOSTNAME: localhost
    # KC_PROXY: edge
    depends_on:
      - postgres
    volumes:
      - keycloak_data:/opt/keycloak/data
    restart: always

  # ----------------------------------------------------
  # üß≠ PGADMIN - Interfaz web para PostgreSQL
  # ----------------------------------------------------
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '5050:80'
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: always

  # ----------------------------------------------------
  # üåê API GATEWAY
  # ----------------------------------------------------
  api-gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - '8080:8080'
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - keycloak
      - recursos
      - solicitudes
      - logistica
    restart: on-failure

  # ----------------------------------------------------
  # üöõ SERVICIO RECURSOS
  # ----------------------------------------------------
  recursos:
    build:
      context: ./recursos
      dockerfile: Dockerfile
    container_name: recursos
    ports:
      - '8082:8081'
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
      - keycloak
    restart: on-failure

  # ----------------------------------------------------
  # üì¶ SERVICIO SOLICITUDES
  # ----------------------------------------------------
  solicitudes:
    build:
      context: ./solicitudes
      dockerfile: Dockerfile
    container_name: solicitudes
    ports:
      - '8083:8082'
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
      - keycloak
    restart: on-failure

  # ----------------------------------------------------
  # üöö SERVICIO LOG√çSTICA
  # ----------------------------------------------------
  logistica:
    build:
      context: ./logistica
      dockerfile: Dockerfile
    container_name: logistica
    ports:
      - '8084:8083'
    environment:
      SPRING_PROFILES_ACTIVE: docker
      GOOGLE_MAPS_API_KEY: 'TU_CLAVE_DE_API_REAL'
    depends_on:
      - postgres
      - keycloak
    restart: on-failure

# ----------------------------------------------------
# üóÉÔ∏è Vol√∫menes persistentes
# ----------------------------------------------------
volumes:
  postgres_data:
  keycloak_data:
  pgadmin_data:
